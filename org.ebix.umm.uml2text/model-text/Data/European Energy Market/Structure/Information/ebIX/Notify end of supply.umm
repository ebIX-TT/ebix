DocLibrary "Data::European Energy Market::Structure::Information::ebIX::Notify end of supply"
{
	businessTerm:      
	copyright:         
	owner:             
	reference:         
	uniqueIdentifier:  ""
	versionIdentifier: "2011.A"
	
	baseURN:           "un:unece:260:data:EEM"
	namespacePrefix:   "rsm"

	BIE: Data::ebix:org::ABIE
	BDT: Data::ebix:org::BDT
	
	InfEnvelope "Notify end of supply"
	{
		MA NotifyEndOfSupply
		{
			ASMA Header (0..1) Energy_Document
			ASMA Process (0..1) Energy_Context
			ASMA Payload (1..1) MP_Event
			
			constraint
			{ 
			    context: Energy_Document
			    kind: [bdt, document, invariant] 
			    
			    
			    -- BDT Energy_Document
			    -- Notify end of supply
			    
			    inv: self.Document_Type.content=DocumentNameCode::406 
			    inv: self.Document_Type.listIdentifier->size()=0
			    inv: self.Document_Type.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			    
			    inv: self.Creation.timeZoneCode->size()=0
			    
			    inv: self.Sender.Identification.schemeIdentifier->size()=0
			    inv: self.Sender.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::9 
			    or self.Sender.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::305
			    
			    inv: self.Sender.Role.content=BusinessRoleCode::MDR
			    inv: self.Sender.Role.listIdentifier->size()=0
			    inv: self.Sender.Role.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			    
			    inv: self.Sender.Name.languageCode->size()=0
			    inv: self.Sender.Name.languageCode->size()=0
			    
			    
			    inv: self.Recipient.Identification.schemeIdentifier->size()=0
			    inv: self.Recipient.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::9 
			    or self.Recipient.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::305
			    
			    inv: self.Recipient.Role.content=BusinessRoleCode::DDK
			    or self.Recipient.Role.content=BusinessRoleCode::TCR
			    inv: self.Recipient.Role.listIdentifier->size()=0
			    inv: self.Recipient.Role.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			              
			    inv: self.Recipient.Name.languageCode->size()=0
			    inv: self.Recipient.Name.languageCode->size()=0
			 }    
			constraint
			{ 
			    context: Energy_Context
			    kind: [bdt, document, invariant] 
			    
			    
			    -- BDT Energy_Context
			    -- Notify end of supply
			    
			    inv: self.Energy_BusinessProcess.content=BusinessReasonCode::E20 
			    inv: self.Energy_BusinessProcess.listIdentifier->size()=0
			    inv: self.Energy_BusinessProcess.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			    
			    inv: self.Energy_BusinessProcessRole.content=BusinessRoleCode::DDK
			    or self.Energy_BusinessProcessRole.content=BusinessRoleCode::TCR
			    inv: self.Energy_BusinessProcessRole.listIdentifier->size()=0
			    inv: self.Energy_BusinessProcessRole.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			    
			    inv: self.Energy_IndustryClassification.content=SectorAreaIdentificationCode::23 
			    or self.Energy_IndustryClassification.content=SectorAreaIdentificationCode::27
			    inv: self.Energy_IndustryClassification.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			 }    
			constraint
			{ 
			    context: NotifyEndOfSupply
			    kind: [abie, document, invariant] 
			    
			    
			    -- Structure Document
			    -- Notify end of supply
			    
			    inv: self.Header->size()=1
			    inv: self.Process->size()=1
			 }    
			constraint
			{ 
			    context: NotifyEndOfSupply
			    kind: [payload, abie, invariant] 
			    
			    
			    -- Structure Payload
			    -- Notify end of supply
			    
			    inv: self.Header->size()=0
			    inv: self.Process->size()=0
			 }    
			constraint
			{ 
			    context: Energy_Context
			    kind: [abie, document, invariant] 
			    
			    
			    -- Structure Energy_Context
			    -- Notify end of supply
			    
			    inv: self.Energy_BusinessProcess->size()=1
			    inv: self.Energy_BusinessProcessRole->size()=1
			    inv: self.Energy_IndustryClassification->size()=1
			 }    
			constraint
			{ 
			    context: Energy_Document
			    kind: [abie, document, invariant] 
			    
			    
			    -- Structure Energy_Document
			    -- Notify end of supply
			    
			    inv: self.Identification->size()=1	  
			    inv: self.Creation->size()=1
			    inv: self.Document_Type->size()=1
			    inv: self.Sender.Identification->size()=1
			    inv: self.Sender.Role->size()=0
			    inv: self.Sender.Name->size()=0
			    inv: self.Recipient.Identification->size()=1
			    inv: self.Recipient.Role->size()=0
			    inv: self.Recipient.Name->size()=0
			 }    
			constraint
			{ 
			    context: MP_Event
			    kind: [payload, abie, document, invariant] 
			    
			    
			    --Structure MP_Event 
			    -- Notify end of supply
			    
			    inv: self.StartOfOccurrence->size()=0
			    inv: self.EndOfOccurrence->size()=1
			    inv: self.MeteringPoint_Used->size()=1
			    inv: self.BalanceSupplier_Involved->size()=1
			    inv: self.BalanceSupplier_Involved.Role->size()=0
			    inv: self.BalanceSupplier_Involved.Name->size()=0
			    --inv: self.TransportCapacityResponsible_Involved->size()=0
			    --inv: self.TransportCapacityResponsible_Involved->size()=1 xor self.BalanceResponsible_Involved->size()=1
			    inv: self.TransportCapacityResponsible_Involved->notEmpty() implies self.BalanceResponsible_Involved->size()=0 
			    inv: self.BalanceResponsible_Involved->notEmpty() implies self.TransportCapacityResponsible_Involved->size()=0 
			    inv: self.TransportCapacityResponsible_Involved.Role->size()=0
			    inv: self.TransportCapacityResponsible_Involved.Name->size()=0
			    --inv: self.BalanceResponsible_Involved->size()=1
			    inv: self.BalanceResponsible_Involved.Name->size()=0
			    inv: self.BalanceResponsible_Involved.Role->size()=0
			    inv: self.MeteredDataResponsible_Involved->size()=0	
			    --inv: self.BusinessProcess->size()=0
			    inv: self.OriginalBusinessDocument->size()=0
			    inv: self.Consumer_Involved->size()=0
			 }    
			constraint
			{ 
			    context: MP_Event
			    kind: [payload, bdt, document, invariant] 
			    
			    
			    -- BDT MP_Event
			    -- Notify end of supply
			    
			    inv: self.StartOfOccurrence.timeZoneCode->size()=0
			    
			    inv: self.EndOfOccurrence.timeZoneCode->size()=0
			    
			    inv: self.OriginalBusinessDocument->size()=0
			    
			    inv: self.MeteringPoint_Used.Identification.schemeIdentifier->size()=0
			    inv: self.MeteringPoint_Used.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::9
			    
			    inv: self.BalanceResponsible_Involved.Identification->size()=1
			    inv: self.BalanceResponsible_Involved.Identification.schemeIdentifier->size()=0
			    inv: self.BalanceResponsible_Involved.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::9 or BalanceResponsible_Involved.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::305
			    
			    -- inv: self.BalanceResponsible_Involved.Role.content=BusinessRoleCode::DDK
			    -- inv: self.BalanceResponsible_Involved.Role.listIdentifier->size()=0
			    -- inv: self.BalanceResponsible_Involved.Role.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			    
			    -- inv: self.BalanceResponsible_Involved.Name.languageCode->size()=1
			    -- inv: self.BalanceResponsible_Involved.Name.languageCode="EN"
			    
			    inv: self.BalanceSupplier_Involved.Identification->size()=1
			    inv: self.BalanceSupplier_Involved.Identification.schemeIdentifier->size()=0
			    inv: self.BalanceSupplier_Involved.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::9 or BalanceSupplier_Involved.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::305
			    
			    -- inv: self.BalanceSupplier_Involved.Role.content=BusinessRoleCode::DDQ
			    -- inv: self.BalanceSupplier_Involved.Role.listIdentifier->size()=0
			    -- inv: self.BalanceSupplier_Involved.Role.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			    
			    -- inv: self.BalanceSupplier_Involved.Name.languageCode->size()=1
			    -- inv: self.BalanceSupplier_Involved.Name.languageCode="EN"
			    
			    inv: self.TransportCapacityResponsible_Involved.Identification->size()=1
			    inv: self.TransportCapacityResponsible_Involved.Identification.schemeIdentifier->size()=0
			    inv: self.TransportCapacityResponsible_Involved.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::9 or TransportCapacityResponsible_Involved.Identification.schemeAgencyIdentifier=CodeListResponsibleAgencyCode::305
			    
			    -- inv: self.TransportCapacityResponsible_Involved.Role.content=BusinessRoleCode::TCR
			    -- inv: self.TransportCapacityResponsible_Involved.Role.listIdentifier->size()=0
			    -- inv: self.TransportCapacityResponsible_Involved.Role.listAgencyIdentifier=CodeListResponsibleAgencyCode::260
			    
			    -- inv: self.TransportCapacityResponsible_Involved.Name.languageCode->size()=1
			    -- inv: self.TransportCapacityResponsible_Involved.Name.languageCode="EN"
			 }    
		}
	}
}
